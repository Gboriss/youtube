{"version":3,"sources":["main.js"],"names":["API","MAX_RESULTS","btn","document","getElementById","searchInput","output","form","addEventListener","event","preventDefault","searching","value","videoSearch","innerHTML","key","maxResults","search","promise","Promise","resolve","reject","requestUrl","requestLink","xhr","XMLHttpRequest","open","responseType","onload","status","console","error","response","onerror","send","then","data","searchWord","index","containers","Array","views","items","forEach","video","promiseStats","statUrl","link","id","videoId","xhrStats","viewCount","statistics","push","videos","viewCounts","sort","compare","viewsCounter","length","containerCounter","videoElement","a","b","array","videoTitle","snippet","title","author","channelTitle","d","Date","publishedAt","options","year","month","day","weekday","timezone","element","thumbnails","medium","url","slice","toLocaleString","querySelectorAll","elements","i","y","querySelector","classList","add","toggle"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const API = 'AIzaSyBLCVZD7ttGVxMh6EEJAkDaBKG6NPpR5T4'\r\nconst MAX_RESULTS = 10\r\n\r\nconst btn = document.getElementById('btn')\r\nconst searchInput = document.getElementById('search')\r\nconst output = document.getElementById('output')\r\n\r\nform.addEventListener('submit', (event) => {\r\n    event.preventDefault()\r\n})\r\n\r\nbtn.addEventListener('click', () => {\r\n    let searching = searchInput.value\r\n    videoSearch(API, MAX_RESULTS, searching)\r\n    output.innerHTML = ''\r\n})\r\n\r\nfunction videoSearch(key, maxResults, search) {\r\n    let promise = new Promise((resolve, reject) => {\r\n        if (searchInput.value !== '') {\r\n            let requestUrl = requestLink(key, maxResults, search)\r\n            // console.log('new videos')\r\n            const xhr = new XMLHttpRequest()\r\n            xhr.open('GET', requestUrl, true)\r\n            xhr.responseType = 'json'\r\n            xhr.onload = () => {\r\n                (xhr.status >= 400) ? console.error(xhr.response) : resolve(xhr.response)\r\n            }\r\n            xhr.onerror = () => {\r\n                reject(xhr.response)\r\n            }\r\n            xhr.send()\r\n        }        \r\n    })\r\n    promise.then(data => {\r\n        // console.log(data)\r\n        output.innerHTML = searchWord(searchInput.value)\r\n        let index = 0\r\n        let containers = new Array()\r\n        let views = new Array()\r\n    \r\n        // getting the number of views for each video\r\n        // Only finished broadcasts and premieres are displayed\r\n        data.items.forEach(video => {\r\n            const promiseStats = new Promise((resolve, reject) => {\r\n                let statUrl = link(video.id.videoId)\r\n                // console.log('Getting the number of views for a video with id:', video.id.videoId)\r\n                const xhrStats = new XMLHttpRequest()\r\n                xhrStats.open('GET', statUrl, true)\r\n                xhrStats.responseType = 'json'\r\n                xhrStats.onload = () => {\r\n                    (xhrStats.status >= 400) ? console.error(xhrStats.response) : resolve(xhrStats.response)\r\n                }\r\n                xhrStats.onerror = () => {\r\n                    reject(xhrStats.response)\r\n                }\r\n                xhrStats.send()\r\n            })\r\n    \r\n            // sorting new videos by number of views\r\n            promiseStats.then(data => {\r\n                index++\r\n                let viewCount = data.items[0].statistics.viewCount\r\n                \r\n                containers.push({\r\n                    videos: video,\r\n                    viewCounts: viewCount\r\n                })\r\n                views.push(viewCount)\r\n                \r\n                if (index == maxResults) {\r\n                    views.sort(compare)\r\n                    for (let viewsCounter = 0; viewsCounter < views.length; viewsCounter++) {\r\n                        for (let containerCounter = 0; containerCounter < containers.length; containerCounter++) {\r\n                            if(containers[containerCounter].viewCounts == views[viewsCounter]) {\r\n                                videoElement(containers[containerCounter].videos)\r\n                                // console.log('viewsCounter)\r\n                            }\r\n                        }\r\n                    } \r\n                }\r\n            })\r\n        }) \r\n    })  \r\n}\r\n\r\nfunction requestLink (key, maxResults, search) {\r\n    return ('https://www.googleapis.com/youtube/v3/search??eventType=completed&order=date&part=snippet&key=' + key + '&type=video&part=snippet&maxResults=' + maxResults + '&q=' + search)\r\n}\r\nfunction searchWord (search) {\r\n    return `<p class=\"result\">Результат поиска по запросу: <b><span id=\"resultWord\">${search}</span></b></p>`\r\n}\r\nfunction compare(a, b) {\r\n    return b - a\r\n}\r\n\r\nfunction videoElement (array) {\r\n    let videoTitle = array.snippet.title\r\n    let author = array.snippet.channelTitle\r\n\r\n    let d = new Date(array.snippet.publishedAt)\r\n    let options = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long',\r\n        timezone: 'UTC',\r\n        // hour: 'numeric',\r\n        // minute: 'numeric',\r\n        // second: 'numeric'\r\n      }\r\n\r\n    let element = `\r\n        <div class=\"element mb-3\" style=\"background-color: #c9e3ff\">\r\n            <div class=\"elementInner d-flex justify-content-start align-items-center\">\r\n                <img src=\"${array.snippet.thumbnails.medium.url}\" alt=\"preview\" class=\"preview m-3\" style=\"width: 160px\">\r\n                <div class=\"elementDesc w-75\">\r\n                    <h3 class=\"videoTitle\">${(videoTitle.length > 60) ? videoTitle.slice(0, 60) + '...' : videoTitle}</h3>\r\n                    <p id=\"author\">Автор: ${(author.length > 40) ? author.slice(0, 40) + '...' : author}</p>\r\n                </div>\r\n                <div class=\"videoInfo d-flex flex-column justify-content-center\">\r\n                    <p id=\"videoDate\">Дата публикации:</p>\r\n                    <p id=\"videoDate\">${d.toLocaleString(\"ru\", options)}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"videoPlayer hidden m-3\">\r\n                <iframe id=\"ytplayer\" class=\"mx-auto\" type=\"text/html\" width=\"97.5%\" height=\"600\" src=\"https://www.youtube.com/embed/${array.id.videoId}\" frameborder=\"0\" allowfullscreen></iframe>\r\n            </div>\r\n        </div>\r\n    ` \r\n    \r\n\r\n    output.innerHTML += element\r\n    searchInput.value = ''\r\n\r\n    let title = document.querySelectorAll('.videoTitle')\r\n    let elements = document.querySelectorAll('.element')\r\n\r\n    for (let i=0; i<title.length; i++) {\r\n        title[i].addEventListener('click', () => {\r\n            for (let y=0; y<title.length; y++) {\r\n                elements[y].querySelector('.videoPlayer').classList.add('hidden')\r\n            }\r\n            elements[i].querySelector('.videoPlayer').classList.toggle('hidden')\r\n            title[i].addEventListener('click', () => {\r\n                elements[i].querySelector('.videoPlayer').classList.toggle('hidden')\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction link (videoId) {\r\n    return (`https://www.googleapis.com/youtube/v3/videos?part=snippet%2Cstatistics&id=${videoId}&fields=items%2Fstatistics(viewCount)&key=${API}`)\r\n}"]}